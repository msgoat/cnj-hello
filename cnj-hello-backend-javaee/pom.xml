<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>group.msg.at.cloud</groupId>
    <artifactId>cnj-hello-backend-javaee</artifactId>
    <version>1.0.0</version>
    <packaging>war</packaging>
    <description>Simple cloud native Java backend based on Java EE Full Profile</description>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <junit.version>5.3.2</junit.version>
        <docker.registry.name>docker.at.automotive.msg.team</docker.registry.name>
        <docker.organization.name>cloudtrain</docker.organization.name>
        <docker.image.name>${docker.registry.name}/${docker.organization.name}/${project.artifactId}</docker.image.name>
        <docker.removeMode>all</docker.removeMode>
        <docker.cleanup>try</docker.cleanup>
        <docker.verbose>true</docker.verbose>
    </properties>
    <dependencyManagement>
        <dependencies>
            <!-- Payara JEE 8 runtime dependencies -->
            <dependency>
                <groupId>fish.payara.extras</groupId>
                <artifactId>payara-embedded-all</artifactId>
                <version>5.184</version>
                <scope>provided</scope>
            </dependency>
            <!-- Generic JEE 8 runtime dependencies -->
            <dependency>
                <groupId>javax</groupId>
                <artifactId>javaee-api</artifactId>
                <version>8.0</version>
                <scope>compile</scope>
            </dependency>
            <!-- Miscellaneous 3rd party stuff -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.8.1</version>
            </dependency>
            <!-- Test runtime dependencies -->
            <!-- JUnit 5.x -->
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Miscellaneous 3rd party stuff -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <!-- Payara Jakarta EE 8 runtime for testing purposes -->
        <dependency>
            <groupId>fish.payara.extras</groupId>
            <artifactId>payara-embedded-all</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Test runtime dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>group.msg.at.cloud</groupId>
            <artifactId>cnj-hello-backend-test</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.0.0-M2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.2</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
                <!-- Docker Maven plugin to build and push docker images -->
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.28.0</version>
                </plugin>
                <!-- Docker Compose Maven plugin to run docker container groups for testing -->
                <plugin>
                    <groupId>com.dkanejs.maven.plugins</groupId>
                    <artifactId>docker-compose-maven-plugin</artifactId>
                    <version>2.0.1</version>
                </plugin>
                <!-- Fabric8 Maven plugin to deploy to Kubernetes/Openshift -->
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>fabric8-maven-plugin</artifactId>
                    <version>3.5.42</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[3.5,)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>1.8</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
		<profile>
			<id>pre-commit-stage</id>
			<properties>
				<test.target.route>http://192.168.99.100:8080</test.target.route>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>**/*SystemTest.java</exclude>
							</excludes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-docker-resources</id>
								<phase>package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>${project.basedir}/src/main/docker</directory>
											<filtering>true</filtering>
										</resource>
										<resource>
											<directory>${project.build.directory}</directory>
											<includes>
												<include>*.war</include>
											</includes>
										</resource>
									</resources>
									<outputDirectory>${project.build.directory}/docker-resources</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>build-docker-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<name>${docker.image.name}</name>
											<build>
												<dockerFileDir>${project.build.directory}/docker-resources</dockerFileDir>
												<tags>
													<tag>${project.version}</tag>
												</tags>
											</build>
										</image>
									</images>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.dkanejs.maven.plugins</groupId>
						<artifactId>docker-compose-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>start-docker-containers</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>up</goal>
								</goals>
								<configuration>
									<composeFile>
										${project.basedir}/src/test/docker/${project.artifactId}/docker-compose.yml
									</composeFile>
									<detachedMode>true</detachedMode>
									<verbose>false</verbose>
								</configuration>
							</execution>
							<execution>
								<id>stop-docker-containers</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>down</goal>
								</goals>
								<configuration>
									<composeFile>
										${project.basedir}/src/test/docker/${project.artifactId}/docker-compose.yml
									</composeFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>run-system-tests</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                                <phase>integration-test</phase>
                                <configuration>
                                    <forkCount>0</forkCount>
                                    <includes>
                                        <include>**/*SystemTest.java</include>
                                    </includes>
                                    <systemPropertyVariables>
                                        <test.target.route>${test.target.route}</test.target.route>
                                    </systemPropertyVariables>
                                    <dependenciesToScan>
                                        <dependency>group.msg.at.cloud:cnj-hello-backend-test</dependency>
                                    </dependenciesToScan>
                                </configuration>
                            </execution>
                            <execution>
                                <id>verify-system-test-results</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                                <phase>verify</phase>
                                <configuration>
                                    <failIfNoTests>true</failIfNoTests>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
				</plugins>
			</build>
		</profile>
    </profiles>
    <distributionManagement>
        <repository>
            <id>at41-maven-repository</id>
            <name>msg Automotive AT Maven Releases Repository</name>
            <url>https://nexus.at.automotive.msg.team/repository/msgoat-maven-releases/</url>
        </repository>
    </distributionManagement>
</project>